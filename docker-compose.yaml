version: '3'

services:

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - orchestre
      - webapp
    networks:
      - app-network
  webapp:
    build: ./webApp_userInterface
    ports:
      - "5173:5173"
    environment:
      - VITE_API_SERVICE_ORCHESTRE_URL=/api/workflow
    volumes:
      - ./webApp_userInterface:/app
      - /app/node_modules
    networks:
      - app-network

  orchestre:
    build: ./orchestreService
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - PROFIL_SERVICE_URL=http://profil:8081
    networks:
      - app-network
    depends_on:
      - profil
    

  profil:
    build: ./profilService
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DB_URL=jdbc:postgresql://dbProfil:5432/ProfilServiceDB
      - DB_USERNAME=postgres
      - DB_PASSWORD=mypass
    networks:
      - app-network
    depends_on:
      - dbProfil

  inventary:
    build: ./inventaryService
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DB_URL=jdbc:postgresql://dbInventary:5432/InventaryServiceDB
      - DB_USERNAME=postgres
      - DB_PASSWORD=mypass
    networks:
      - app-network
    depends_on:
      - dbInventary

  payment:
    build: ./paymentService
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DB_URL=jdbc:postgresql://dbPayment:5432/PaymentServiceDB
      - DB_USERNAME=postgres
      - DB_PASSWORD=mypass
    networks:
      - app-network
    depends_on:
      - dbPayment

  order:
    build: ./orderService
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DB_URL=jdbc:postgresql://dbOrder:5432/OrderServiceDB
      - DB_USERNAME=postgres
      - DB_PASSWORD=mypass
    networks:
      - app-network
    depends_on:
      - dbOrder

  cart:
    build: ./cartService
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DB_URL=jdbc:postgresql://dbOrder:5432/CartServiceDB
      - DB_USERNAME=postgres
      - DB_PASSWORD=mypass
    networks:
      - app-network
    depends_on:
      - dbCart    

  dbProfil:
    image: postgres:17-alpine
    container_name: db-profil
    restart: unless-stopped
    environment:
      POSTGRES_DB: ProfilServiceDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypass
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256  
    ports:
      - "5432:5432"  
    volumes:
      - pgProfilData:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ProfilServiceDB"]
      interval: 5s
      timeout: 5s
      retries: 5

  dbInventary:
    image: postgres:17-alpine
    container_name: db-inventary
    restart: unless-stopped
    environment:
      POSTGRES_DB: InventaryServiceDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypass
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
    ports:
      - "5433:5432"
    volumes:
      - pgInventaryData:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d InventaryServiceDB"]
      interval: 5s
      timeout: 5s
      retries: 5 
  dbPayment:
    image: postgres:17-alpine
    container_name: db-payment
    restart: unless-stopped
    environment:
      POSTGRES_DB: PaymentServiceDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypass
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
    ports:
      - "5435:5432"
    volumes:
      - pgPaymentData:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d PaymentServiceDB"]
      interval: 5s
      timeout: 5s
      retries: 5 

  dbOrder:
    image: postgres:17-alpine
    container_name: db-order
    restart: unless-stopped
    environment:
      POSTGRES_DB: OrderServiceDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypass
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
    ports:
      - "5434:5432"
    volumes:
      - pgOrderData:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d OrderServiceDB"]
      interval: 5s
      timeout: 5s
      retries: 5 

  dbCart:
    image: postgres:17-alpine
    container_name: db-cart
    restart: unless-stopped
    environment:
      POSTGRES_DB: CartServiceDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypass
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
    ports:
      - "5436:5432"
    volumes:
      - pgCartData:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d CartServiceDB"]
      interval: 5s
      timeout: 5s
      retries: 5     


networks:
  app-network:
    driver: bridge

volumes:
  pgProfilData:
  pgInventaryData:
  pgOrderData:
  pgPaymentData:
  pgCartData:


